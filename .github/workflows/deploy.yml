name: Deploy to Amazon EKS

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Tag of the image to deploy'
        required: true
        default: 'latest'

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: takehome/tasky
  CONTAINER_NAME: tasky
  EKS_CLUSTER_NAME: demo

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Update kube config
        run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

      - name: Validate Container Vulnerabilities
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          criticalCVE=$(aws ecr describe-image-scan-findings --repository-name takehome/tasky --image-id imageTag=1bca93a901d144090f3a2deac8f32101262fe4e9 | jq -r '.imageScanFindings.findingSeverityCounts.CRITICAL') 
          if [ "$criticalCVE" -gt 0 ]; then
                      echo "::error::Failing due to many High vulnerabilities: $highCVE"
                      exit 1
          fi
      - name: Deploy to EKS
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          pwd
          ls -ltr
          sed -i.bak -e "s/IMAGE_TAG/${{ inputs.image_tag }}/g" -e "s|MONGO_URI_VALUE|${{ secrets.MONGO_URL }}|g" ./eks-deployment.yaml && \
          kubectl apply -f ./eks-deployment.yaml